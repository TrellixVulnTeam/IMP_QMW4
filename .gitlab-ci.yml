image: docker-r3lab.uni.lu/imp/imp-with-db:1.4

variables:
    ROOT_DIR: "/home/imp/code"
    SRCDIR: "$CI_PROJECT_DIR"
    LIBDIR: "/home/imp/lib"
    OUTPUTDIR: "$CI_PROJECT_DIR/testing/output"
    MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
    MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
    SAMPLE: "test"
    DBPATH: "/home/imp/db"
    IMP_SUDO: "sudo"
    THREADS: "4"
    MEMTOTAL: "8"
    MEMCORE: "2"
    CONFIGFILE: "$CI_PROJECT_DIR/test/default.conf.json"
    IMP_ASSEMBLER: "idba"

stages:
  - dag
  - preprocessing
  - download
  - assembly
  - analysis
  - binning
  - report

get_preprocessed_files:
  stage: download
  script:
    - mv /home/imp/preprocessed/* ${OUTPUTDIR}/Preprocessing/.
  cache:
    key: "$CI_BUILD_REF_NAME"
    untracked: true
    paths:
      - ${OUTPUTDIR}

init:
  stage: dag
  script:
    - snakemake -nps $CI_PROJECT_DIR/rules/ini/init

preprocessing:
  stage: dag
  script:
    - snakemake -np preprocessing.done

preprocessing-mt-only:
  stage: dag
  script:
    - snakemake -np preprocessing.done
  variables:
    MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
    MG: ""

preprocessing-mg-only:
  stage: dag
  script:
    - snakemake -np preprocessing.done
  variables:
    MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
    MT: ""

assembly:
  stage: dag
  script:
    - snakemake -np assembly.done

binning:
  stage: dag
  script:
    - snakemake -np binning.done

analysis:
  stage: dag
  script:
    - snakemake -np analysis.done

report:
  stage: dag
  script:
    - snakemake -np report.done

mgmt-default-preprocessing:
    stage: preprocessing
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done
    artifacts:
      paths:
        - ${OUTPUTDIR}

mg-default-preprocessing:
    stage: preprocessing
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mg-default-preprocessing"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mt-default-preprocessing:
    stage: preprocessing
    variables:
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
        MG: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mt-default-preprocessing"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mgmt-no-preprocessing:
    stage: preprocessing
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/no-preprocessing"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_preprocessing.conf.json"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done


mgmt-no-filtering:
    stage: preprocessing
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/no-filtering"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_filtering.conf.json"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mg-no-preprocessing:
    stage: preprocessing
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/no-preprocessing"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_preprocessing.conf.json"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mt-no-preprocessing:
    stage: preprocessing
    variables:
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
        MG: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/no-preprocessing"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_preprocessing.conf.json"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mg-no-filtering:
    stage: preprocessing
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mgno-filtering"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_filtering.conf.json"
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done

mt-no-filtering:
    stage: preprocessing
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mtno-filtering"
        CONFIGFILE: "$CI_PROJECT_DIR/test/no_filtering.conf.json"
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
        MG: ""
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile preprocessing.done


assembly-mgmt-idba:
    stage: assembly
    variables:
        IMP_ASSEMBLER: "idba"
    artifacts:
      paths:
        - ${OUTPUTDIR}
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile assembly.done

assembly-mgmt-megahit:
    stage: assembly
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/megahit"
        IMP_ASSEMBLER: "megahit"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile assembly.done


assembly-mg:
    stage: assembly
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mg-only"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile assembly.done

assembly-mt:
    stage: assembly
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mt-only"
        MG: ""
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile assembly.done

analysis-mgmt:
    stage: analysis
    artifacts:
      paths:
        - ${OUTPUTDIR}
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile analysis.done

analysis-mg:
    stage: analysis
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mg-only"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile analysis.done

analysis-mt:
    stage: analysis
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mt-only"
        MG: ""
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile analysis.done

binning-mgmt:
    stage: binning
    artifacts:
      paths:
        - ${OUTPUTDIR}
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile binning.done

binning-mg:
    stage: binning
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        MG: "$CI_PROJECT_DIR/test/MG.R1.small.fq $CI_PROJECT_DIR/test/MG.R2.small.fq"
        MT: ""
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mg-only"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile binning.done

binning-mt:
    stage: binning
    artifacts:
      paths:
        - ${OUTPUTDIR}
    variables:
        OUTPUTDIR: "$CI_PROJECT_DIR/testing/mt-only"
        MG: ""
        MT: "$CI_PROJECT_DIR/test/MT.R1.small.fq $CI_PROJECT_DIR/test/MT.R2.small.fq"
    script:
      - snakemake -s $CI_PROJECT_DIR/Snakefile binning.done
